# Generated by Django 5.2.5 on 2025-09-19 13:00

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('gamificacao', '0015_gamificationsettings_cooldown_mesma_questao_horas_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='gamificationsettings',
            name='bonus_multiplicador_acertos_consecutivos',
            field=models.FloatField(default=2.0, help_text='Por quanto o XP de acerto será multiplicado quando o bônus estiver ativo (Ex: 2.0 para XP em dobro).', verbose_name='Multiplicador de XP do Bônus'),
        ),
        migrations.AddField(
            model_name='gamificationsettings',
            name='xp_acerto_primeira_vez',
            field=models.PositiveIntegerField(default=15, help_text='XP total ganho ao acertar uma questão pela primeira vez. Deve ser maior que o acerto padrão.', verbose_name='Bônus de XP por Acerto na Primeira Vez'),
        ),
        migrations.AddField(
            model_name='gamificationsettings',
            name='xp_acerto_redencao',
            field=models.PositiveIntegerField(default=20, help_text='XP total ganho ao acertar uma questão que o usuário errou anteriormente. Recompensa o estudo e a correção.', verbose_name='Bônus de XP por Redenção (Corrigir um Erro)'),
        ),
        migrations.AlterField(
            model_name='gamificationsettings',
            name='acertos_consecutivos_para_bonus',
            field=models.PositiveIntegerField(default=5, help_text='Quantas questões o usuário precisa acertar em sequência para ativar o multiplicador de XP.', verbose_name='Nº de Acertos Consecutivos para Bônus'),
        ),
        migrations.AlterField(
            model_name='gamificationsettings',
            name='habilitar_teto_xp_diario',
            field=models.BooleanField(default=False, help_text='Se marcado, limita a quantidade de XP que um usuário pode ganhar por dia.', verbose_name='Habilitar Teto de XP Diário?'),
        ),
        migrations.AlterField(
            model_name='gamificationsettings',
            name='meta_diaria_questoes',
            field=models.PositiveIntegerField(default=15, help_text='Número de questões que o usuário precisa resolver no dia para ganhar o bônus.', verbose_name='Questões para Atingir a Meta Diária'),
        ),
        migrations.AlterField(
            model_name='gamificationsettings',
            name='xp_bonus_meta_diaria',
            field=models.PositiveIntegerField(default=50, help_text='Bônus de XP concedido uma vez por dia ao atingir a meta de questões resolvidas.', verbose_name='Bônus de XP por Meta Diária'),
        ),
        migrations.AlterField(
            model_name='gamificationsettings',
            name='xp_por_acerto',
            field=models.PositiveIntegerField(default=10, help_text='XP ganho ao acertar uma questão que já foi respondida corretamente antes.', verbose_name='XP por Acerto Padrão'),
        ),
        migrations.AlterField(
            model_name='gamificationsettings',
            name='xp_por_erro',
            field=models.PositiveIntegerField(default=2, help_text="XP ganho (ou 'de consolação') ao errar uma questão.", verbose_name='XP por Erro'),
        ),
    ]
