# Generated by Django 5.2.5 on 2025-09-19 21:30

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('gamificacao', '0018_gamificationsettings_cooldown_mesmo_simulado_horas'),
    ]

    operations = [
        migrations.AddField(
            model_name='gamificationsettings',
            name='multiplicador_xp_simulado',
            field=models.FloatField(default=1.2, help_text='Ex: 1.2 significa que o XP ganho no simulado será 20% maior que na prática normal.', verbose_name='Multiplicador de XP para Simulados Dinâmicos'),
        ),
        migrations.AddField(
            model_name='gamificationsettings',
            name='usar_xp_dinamico_simulado',
            field=models.BooleanField(default=True, help_text='Se marcado, o XP será calculado com base nos acertos/erros. Se desmarcado, usará o valor fixo abaixo.', verbose_name='Usar XP Dinâmico por Desempenho em Simulados?'),
        ),
        migrations.AddField(
            model_name='gamificationsettings',
            name='xp_dinamico_considera_erros',
            field=models.BooleanField(default=True, help_text='Se marcado, a pontuação dos erros será somada no cálculo do XP dinâmico.', verbose_name='Considerar XP por Erro no cálculo dinâmico?'),
        ),
        migrations.AddField(
            model_name='profilegamificacao',
            name='cooldowns_ativos',
            field=models.JSONField(blank=True, default=dict, help_text='Armazena timestamps de cooldowns para evitar farming.'),
        ),
        migrations.AlterField(
            model_name='gamificationsettings',
            name='xp_base_simulado_concluido',
            field=models.PositiveIntegerField(default=100, help_text='XP ganho apenas por finalizar um simulado, se o XP dinâmico estiver desativado.', verbose_name='XP Fixo por Simulado Concluído'),
        ),
    ]
